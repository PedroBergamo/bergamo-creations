{"ast":null,"code":"var _jsxFileName = \"/Users/pedber/Documents/Bergamo Creations/web-bergamo-creations/src/pages/CoverArt.js\";\nimport React from 'react';\nimport MusicList from \"./content/CoverArts.json\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../css/pages.css\";\nimport { Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoverArt = props => {\n  const ValidId = parseInt(props.match.params.id);\n  if (!ValidId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  const fetchedSong = {};\n  MusicList.forEach((item, i) => {\n    if (ValidId === item.id) {\n      fetchedSong.title = item.title ? item.title : \"No title given\";\n      fetchedSong.lyrics = item.lyrics ? item.lyrics : \"No lyrics available\";\n      fetchedSong.translation = item.translation ? item.translation : \"No translation available\";\n      fetchedSong.video = item.video ? item.video : \"No video given\";\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp : \"No content given\";\n      fetchedSong.imageAddress = item.imageAddress ? item.imageAddress : \"No imageAddress given\";\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 8,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fetchedSong.imageAddress,\n        width: \"100%\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 8,\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: fetchedSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), fetchedSong.lyrics.map((verse, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lyrics\",\n          children: verse\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Composer: Pedro Bergamo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA9 Aracn\\xEDdea Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"bandcamp\",\n      title: fetchedSong.title,\n      src: `https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`,\n      seamless: true,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`,\n        children: fetchedSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, fetchedSong.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_c = CoverArt;\nexport default CoverArt;\nvar _c;\n$RefreshReg$(_c, \"CoverArt\");","map":{"version":3,"names":["React","MusicList","Redirect","Col","CoverArt","props","ValidId","parseInt","match","params","id","fetchedSong","forEach","item","i","title","lyrics","translation","video","bandcamp","imageAddress","map","verse"],"sources":["/Users/pedber/Documents/Bergamo Creations/web-bergamo-creations/src/pages/CoverArt.js"],"sourcesContent":["import React from 'react';\nimport MusicList from \"./content/CoverArts.json\"\nimport {Redirect} from \"react-router-dom\"\nimport \"../css/pages.css\"\nimport {Col} from \"react-bootstrap\"\n\nconst CoverArt = (props) => {\n  const ValidId = parseInt(props.match.params.id)\n  if(!ValidId){\n    return <Redirect to=\"/404\" />\n  }\n  const fetchedSong = {}\n  MusicList.forEach((item, i) => {\n    if(ValidId === item.id){\n      fetchedSong.title = item.title ? item.title: \"No title given\"\n      fetchedSong.lyrics = item.lyrics ? item.lyrics: \"No lyrics available\"\n      fetchedSong.translation = item.translation ? item.translation: \"No translation available\"\n      fetchedSong.video = item.video ? item.video: \"No video given\"\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp: \"No content given\"\n      fetchedSong.imageAddress = item.imageAddress ? item.imageAddress: \"No imageAddress given\"\n    }\n  });\n\n\n  return(\n          <div key={fetchedSong.id} className=\"song\">\n          <Col xs={8} md={6}>\n            <img src={fetchedSong.imageAddress} width=\"100%\" alt=\"\" />\n          </Col>\n\n          <Col xs={8} md={6}>\n          <h3>{fetchedSong.title}</h3>\n          {fetchedSong.lyrics.map((verse, i) => {\n            return <p key={i} className=\"lyrics\">{verse}</p>\n          })}\n          </Col>\n            <p>&nbsp;</p>\n            <p>Composer: Pedro Bergamo</p>\n            <p>© Aracnídea Records</p>\n            <iframe className=\"bandcamp\" title={fetchedSong.title}\n                src={`https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`} seamless>\n              <a href={`https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`}>{fetchedSong.title}</a>\n            </iframe>\n              \n          </div>\n    );\n};\n\nexport default CoverArt;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}