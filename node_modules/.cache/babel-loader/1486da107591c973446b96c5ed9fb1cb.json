{"ast":null,"code":"var _jsxFileName = \"/Users/pedber/Desktop/Science Projects/Code/React/website/src/pages/MusicPage.js\";\nimport React from 'react';\nimport MusicList from \"./content/MusicList.json\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./pages.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MusicPage = props => {\n  const ValidId = parseInt(props.match.params.id);\n\n  if (!ValidId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  const fetchedSong = {};\n  MusicList.forEach((item, i) => {\n    if (ValidId === item.id) {\n      fetchedSong.title = item.title ? item.title : \"No title given\";\n      fetchedSong.lyrics = item.lyrics ? item.lyrics : \"No lyrics available\";\n      fetchedSong.video = item.video ? item.video : \"No video given\";\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp : \"No content given\";\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: fetchedSong.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"bandcamp\",\n      title: fetchedSong.title,\n      src: `https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`,\n      seamless: true,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`,\n        children: fetchedSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), fetchedSong.lyrics.map((verse, i) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lyrics\",\n        children: verse\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }), console.log(fetchedSong.bandcamp)]\n  }, fetchedSong.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MusicPage;\nexport default MusicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicPage\");","map":{"version":3,"sources":["/Users/pedber/Desktop/Science Projects/Code/React/website/src/pages/MusicPage.js"],"names":["React","MusicList","Redirect","MusicPage","props","ValidId","parseInt","match","params","id","fetchedSong","forEach","item","i","title","lyrics","video","bandcamp","map","verse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAxB;;AACA,MAAG,CAACJ,OAAJ,EAAY;AACV,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMK,WAAW,GAAG,EAApB;AACAT,EAAAA,SAAS,CAACU,OAAV,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7B,QAAGR,OAAO,KAAKO,IAAI,CAACH,EAApB,EAAuB;AACrBC,MAAAA,WAAW,CAACI,KAAZ,GAAoBF,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAlB,GAAyB,gBAA7C;AACAJ,MAAAA,WAAW,CAACK,MAAZ,GAAqBH,IAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAnB,GAA2B,qBAAhD;AACAL,MAAAA,WAAW,CAACM,KAAZ,GAAoBJ,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACI,KAAlB,GAAyB,gBAA7C;AACAN,MAAAA,WAAW,CAACO,QAAZ,GAAuBL,IAAI,CAACK,QAAL,GAAgBL,IAAI,CAACK,QAArB,GAA+B,kBAAtD;AACD;AACF,GAPD;AASA,sBACE;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA,4BACM;AAAA,gBAAKP,WAAW,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,YADN,eAEM;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,KAAK,EAAEJ,WAAW,CAACI,KAAhD;AACA,MAAA,GAAG,EAAG,6CAA4CJ,WAAW,CAACO,QAAS,2EADvE;AACmJ,MAAA,QAAQ,MAD3J;AAAA,6BAEI;AAAG,QAAA,IAAI,EAAG,2CAA0CP,WAAW,CAACI,KAAM,EAAtE;AAAA,kBAA0EJ,WAAW,CAACI;AAAtF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFN,EAMOJ,WAAW,CAACK,MAAZ,CAAmBG,GAAnB,CAAuB,CAACC,KAAD,EAAQN,CAAR,KAAc;AACpC,0BAAO;AAAW,QAAA,SAAS,EAAC,QAArB;AAAA,kBAA+BM;AAA/B,SAAQN,CAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CANP,EASOO,OAAO,CAACC,GAAR,CAAYX,WAAW,CAACO,QAAxB,CATP;AAAA,KAAUP,WAAW,CAACD,EAAtB;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7BD;;KAAMN,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport MusicList from \"./content/MusicList.json\"\nimport {Redirect} from \"react-router-dom\"\nimport \"./pages.css\"\n\nconst MusicPage = (props) => {\n  const ValidId = parseInt(props.match.params.id)\n  if(!ValidId){\n    return <Redirect to=\"/404\" />\n  }\n  const fetchedSong = {}\n  MusicList.forEach((item, i) => {\n    if(ValidId === item.id){\n      fetchedSong.title = item.title ? item.title: \"No title given\"\n      fetchedSong.lyrics = item.lyrics ? item.lyrics: \"No lyrics available\"\n      fetchedSong.video = item.video ? item.video: \"No video given\"\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp: \"No content given\"\n    }\n  });\n\n  return(\n    <div key={fetchedSong.id} className=\"song\">\n          <h1>{fetchedSong.title}</h1>\n          <iframe className=\"bandcamp\" title={fetchedSong.title}\n          src={`https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`} seamless>\n              <a href={`https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`}>{fetchedSong.title}</a>\n          </iframe>\n          {fetchedSong.lyrics.map((verse, i) => {\n            return <p key={i} className=\"lyrics\">{verse}</p>\n          })}\n          {console.log(fetchedSong.bandcamp)}\n\n    </div>\n    );\n};\n\nexport default MusicPage;\n"]},"metadata":{},"sourceType":"module"}