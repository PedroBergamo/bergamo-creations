{"ast":null,"code":"import { ScrollMode } from './types';\nexport var getIndexes = function getIndexes(slide, endSlide, count) {\n  var slideIndex = slide;\n  var endSlideIndex = endSlide;\n\n  if (slideIndex < 0) {\n    slideIndex += count;\n  } else if (slideIndex > count - 1) {\n    slideIndex -= count;\n  }\n\n  if (endSlideIndex < 0) {\n    endSlideIndex += count;\n  } else if (endSlideIndex > count - 1) {\n    endSlideIndex -= count;\n  }\n\n  return [slideIndex, endSlideIndex];\n};\nexport var addEvent = function addEvent(elem, type, eventHandle) {\n  if (elem === null || typeof elem === 'undefined') {\n    return;\n  }\n\n  if (elem.addEventListener) {\n    elem.addEventListener(type, eventHandle, false);\n  } else if (elem.attachEvent) {\n    elem.attachEvent(\"on\".concat(type), eventHandle);\n  } else {\n    elem[\"on\".concat(type)] = eventHandle;\n  }\n};\nexport var removeEvent = function removeEvent(elem, type, eventHandle) {\n  if (elem === null || typeof elem === 'undefined') {\n    return;\n  }\n\n  if (elem.removeEventListener) {\n    elem.removeEventListener(type, eventHandle, false);\n  } else if (elem.detachEvent) {\n    elem.detachEvent(\"on\".concat(type), eventHandle);\n  } else {\n    elem[\"on\".concat(type)] = null;\n  }\n};\nexport var getNextMoveIndex = function getNextMoveIndex(scrollMode, wrapAround, currentSlide, count, slidesToScroll, slidesToShow) {\n  if (!wrapAround && scrollMode === ScrollMode.remainder && count < currentSlide + (slidesToScroll + slidesToShow)) {\n    var remindedSlides = count - (currentSlide + slidesToScroll) - (slidesToShow - slidesToScroll);\n    return currentSlide + remindedSlides;\n  }\n\n  return currentSlide + slidesToScroll;\n};\nexport var getPrevMoveIndex = function getPrevMoveIndex(scrollMode, wrapAround, currentSlide, slidesToScroll) {\n  if (!wrapAround && scrollMode === ScrollMode.remainder && currentSlide - slidesToScroll < 0) {\n    return 0;\n  }\n\n  return currentSlide - slidesToScroll;\n};","map":{"version":3,"sources":["/Users/pedber/Desktop/0 Science Projects/Code/React/website/node_modules/nuka-carousel/es-v5/utils.js"],"names":["ScrollMode","getIndexes","slide","endSlide","count","slideIndex","endSlideIndex","addEvent","elem","type","eventHandle","addEventListener","attachEvent","concat","removeEvent","removeEventListener","detachEvent","getNextMoveIndex","scrollMode","wrapAround","currentSlide","slidesToScroll","slidesToShow","remainder","remindedSlides","getPrevMoveIndex"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4C;AAClE,MAAIC,UAAU,GAAGH,KAAjB;AACA,MAAII,aAAa,GAAGH,QAApB;;AAEA,MAAIE,UAAU,GAAG,CAAjB,EAAoB;AAClBA,IAAAA,UAAU,IAAID,KAAd;AACD,GAFD,MAEO,IAAIC,UAAU,GAAGD,KAAK,GAAG,CAAzB,EAA4B;AACjCC,IAAAA,UAAU,IAAID,KAAd;AACD;;AAED,MAAIE,aAAa,GAAG,CAApB,EAAuB;AACrBA,IAAAA,aAAa,IAAIF,KAAjB;AACD,GAFD,MAEO,IAAIE,aAAa,GAAGF,KAAK,GAAG,CAA5B,EAA+B;AACpCE,IAAAA,aAAa,IAAIF,KAAjB;AACD;;AAED,SAAO,CAACC,UAAD,EAAaC,aAAb,CAAP;AACD,CAjBM;AAkBP,OAAO,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,WAA9B,EAA2C;AAC/D,MAAIF,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,WAArC,EAAkD;AAChD;AACD;;AAED,MAAIA,IAAI,CAACG,gBAAT,EAA2B;AACzBH,IAAAA,IAAI,CAACG,gBAAL,CAAsBF,IAAtB,EAA4BC,WAA5B,EAAyC,KAAzC;AACD,GAFD,MAEO,IAAIF,IAAI,CAACI,WAAT,EAAsB;AAC3BJ,IAAAA,IAAI,CAACI,WAAL,CAAiB,KAAKC,MAAL,CAAYJ,IAAZ,CAAjB,EAAoCC,WAApC;AACD,GAFM,MAEA;AACLF,IAAAA,IAAI,CAAC,KAAKK,MAAL,CAAYJ,IAAZ,CAAD,CAAJ,GAA0BC,WAA1B;AACD;AACF,CAZM;AAaP,OAAO,IAAII,WAAW,GAAG,SAASA,WAAT,CAAqBN,IAArB,EAA2BC,IAA3B,EAAiCC,WAAjC,EAA8C;AACrE,MAAIF,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,WAArC,EAAkD;AAChD;AACD;;AAED,MAAIA,IAAI,CAACO,mBAAT,EAA8B;AAC5BP,IAAAA,IAAI,CAACO,mBAAL,CAAyBN,IAAzB,EAA+BC,WAA/B,EAA4C,KAA5C;AACD,GAFD,MAEO,IAAIF,IAAI,CAACQ,WAAT,EAAsB;AAC3BR,IAAAA,IAAI,CAACQ,WAAL,CAAiB,KAAKH,MAAL,CAAYJ,IAAZ,CAAjB,EAAoCC,WAApC;AACD,GAFM,MAEA;AACLF,IAAAA,IAAI,CAAC,KAAKK,MAAL,CAAYJ,IAAZ,CAAD,CAAJ,GAA0B,IAA1B;AACD;AACF,CAZM;AAaP,OAAO,IAAIQ,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,UAAtC,EAAkDC,YAAlD,EAAgEhB,KAAhE,EAAuEiB,cAAvE,EAAuFC,YAAvF,EAAqG;AACjI,MAAI,CAACH,UAAD,IAAeD,UAAU,KAAKlB,UAAU,CAACuB,SAAzC,IAAsDnB,KAAK,GAAGgB,YAAY,IAAIC,cAAc,GAAGC,YAArB,CAA9E,EAAkH;AAChH,QAAIE,cAAc,GAAGpB,KAAK,IAAIgB,YAAY,GAAGC,cAAnB,CAAL,IAA2CC,YAAY,GAAGD,cAA1D,CAArB;AACA,WAAOD,YAAY,GAAGI,cAAtB;AACD;;AAED,SAAOJ,YAAY,GAAGC,cAAtB;AACD,CAPM;AAQP,OAAO,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BP,UAA1B,EAAsCC,UAAtC,EAAkDC,YAAlD,EAAgEC,cAAhE,EAAgF;AAC5G,MAAI,CAACF,UAAD,IAAeD,UAAU,KAAKlB,UAAU,CAACuB,SAAzC,IAAsDH,YAAY,GAAGC,cAAf,GAAgC,CAA1F,EAA6F;AAC3F,WAAO,CAAP;AACD;;AAED,SAAOD,YAAY,GAAGC,cAAtB;AACD,CANM","sourcesContent":["import { ScrollMode } from './types';\nexport var getIndexes = function getIndexes(slide, endSlide, count) {\n  var slideIndex = slide;\n  var endSlideIndex = endSlide;\n\n  if (slideIndex < 0) {\n    slideIndex += count;\n  } else if (slideIndex > count - 1) {\n    slideIndex -= count;\n  }\n\n  if (endSlideIndex < 0) {\n    endSlideIndex += count;\n  } else if (endSlideIndex > count - 1) {\n    endSlideIndex -= count;\n  }\n\n  return [slideIndex, endSlideIndex];\n};\nexport var addEvent = function addEvent(elem, type, eventHandle) {\n  if (elem === null || typeof elem === 'undefined') {\n    return;\n  }\n\n  if (elem.addEventListener) {\n    elem.addEventListener(type, eventHandle, false);\n  } else if (elem.attachEvent) {\n    elem.attachEvent(\"on\".concat(type), eventHandle);\n  } else {\n    elem[\"on\".concat(type)] = eventHandle;\n  }\n};\nexport var removeEvent = function removeEvent(elem, type, eventHandle) {\n  if (elem === null || typeof elem === 'undefined') {\n    return;\n  }\n\n  if (elem.removeEventListener) {\n    elem.removeEventListener(type, eventHandle, false);\n  } else if (elem.detachEvent) {\n    elem.detachEvent(\"on\".concat(type), eventHandle);\n  } else {\n    elem[\"on\".concat(type)] = null;\n  }\n};\nexport var getNextMoveIndex = function getNextMoveIndex(scrollMode, wrapAround, currentSlide, count, slidesToScroll, slidesToShow) {\n  if (!wrapAround && scrollMode === ScrollMode.remainder && count < currentSlide + (slidesToScroll + slidesToShow)) {\n    var remindedSlides = count - (currentSlide + slidesToScroll) - (slidesToShow - slidesToScroll);\n    return currentSlide + remindedSlides;\n  }\n\n  return currentSlide + slidesToScroll;\n};\nexport var getPrevMoveIndex = function getPrevMoveIndex(scrollMode, wrapAround, currentSlide, slidesToScroll) {\n  if (!wrapAround && scrollMode === ScrollMode.remainder && currentSlide - slidesToScroll < 0) {\n    return 0;\n  }\n\n  return currentSlide - slidesToScroll;\n};"]},"metadata":{},"sourceType":"module"}